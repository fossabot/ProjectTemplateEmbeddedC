/*
 * This file has been auto-generated by CppUTestMock v0.4.
 *
 * Contents will NOT be preserved if it is regenerated!!!
 */

#include "ExamplePeripheral_expect.hpp"

namespace expect {
MockExpectedCall& configure_example_peripheral(CppUMockGen::Parameter<int> value)
{
    bool __ignoreOtherParams__ = false;
    MockExpectedCall& __expectedCall__ = mock().expectOneCall("configure_example_peripheral");
    if(value.isIgnored()) { __ignoreOtherParams__ = true; } else { __expectedCall__.withIntParameter("value", value.getValue()); }
    if(__ignoreOtherParams__) { __expectedCall__.ignoreOtherParameters(); }
    return __expectedCall__;
}
MockExpectedCall& configure_example_peripheral(unsigned int __numCalls__, CppUMockGen::Parameter<int> value)
{
    bool __ignoreOtherParams__ = false;
    MockExpectedCall& __expectedCall__ = mock().expectNCalls(__numCalls__, "configure_example_peripheral");
    if(value.isIgnored()) { __ignoreOtherParams__ = true; } else { __expectedCall__.withIntParameter("value", value.getValue()); }
    if(__ignoreOtherParams__) { __expectedCall__.ignoreOtherParameters(); }
    return __expectedCall__;
}
}

